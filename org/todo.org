* Things to do on the project
** Setup the initial project [9/9]
   - [X] add COPYING files.
   - [X] Setup github project.
   - [X] Add basic SConstruct / Autotools support.
   - [X] Fix the dist check task (lib seems to be badly referenced ...)
   - [X] Add gtest support, implement some phony test.
   - [X] Add gmock support, implement some phony test.
   - [X] Add i18n support, make sure I can display a string in the
     proper locale (through compiler switchs if necessary).
   - [X] Add SDL support, make sure I can open a window in the main.
   - [X] Add Lua support, make sure I can load a lua file an execute
     its content (assuming the file is in /share/ or something like that ...)
   - [ ] Set up font loading using sdl_ttf (add a font to the project, use it to display some
	 translated text !!)
	 
** Compile project under Win32 [1/3]
   - [ ] Configure mingw-cross-env to use all the required libs
   - [X] set up a virtualbox machine to test the program
   - [ ] make a shell script to do the compilation

** Make project deb package under linux [1/3]
   - [X] Make an initial deb package following the debian maintainer manual
   - [ ] Refollow the debian maintainer manual to create a debian package from the sources (there is a version of
	 the control file somewhere, but it was done a long time ago)
   - [ ] Automate the process of creating the debian package

** Make Win32 installer using NSIS [2/4]
   - [X] Use NSIS version from mingw-cross-env
   - [X] Write installer that install all the necessary libs, and the binairies
   - [ ] Automate building the win32 version along with the installer
   - [ ] Add a windows icon for the executable
	 
** Compile project under Win32 [8/9]
   - [X] Install cross-compilator
   - [X] Setup libs for cross compilation
   - [X] Add Win32 version of i18n support
   - [X] Add Win32 version of SDL (or SFML ?)
   - [X] Cross compile windows binary
   - [X] Find a way to make i18n work when cross compiling
   - [X] Install a vmware to run the binairy under windows (or use wine ... or another machine .. whatever)
   - [X] Write a basic NSIS installer (and cross compile to a windows Setup.exe)
   - [ ] Write a shell script to automate creating the exe and the NSIS installer (playing with the PATH, the configure options and stuff)
   - [ ] See if the version of the software can be integrated in the Setup.exe name, or something

** Make project deb package under linux [/]
   - [ ] Make distcheck work again ; it fails at finding the 
         lua headers because it runs autoconf by itsef without
         passing the releavant options ... 
   - [ ] Read the debian new maintainer guide
   - [ ] Do the fracking package !
   - [ ] Write a shell script to automate creating the distrib and the package

** Game engine features
*** Iteration 1
Demo : display a grid with a entry and an exit, in an SDL window.
**** BE
     - [ ] Notion of a grid, entry, exit.
     - [ ] Grid is stored in a Lua script (as a simple structure)
**** Client
     - [ ] Sprites for empty cells, entry, exit.
     - [ ] Client displays all cells
**** Build system
     - [ ] Images must be copied to the proper location, and game can be run without questions.

*** Iteration 2

Demo : some power-ups are added on the grid, an you see them in the client.
    
**** BE
     - [ ] The player has a position (starts at the entry).
     - [ ] The player has a current "moving way".
     - [ ] Two moving ways exists : one-cell at a time, and two-cells at a time.
     - [ ] You can put "moving-power-ups" on the grid using the Lua script.
	   
**** Client
     - [ ] Images for the power-ups
     - [ ] Clients display the power-ups accordingly.
	   

*** Iteration 3

Demo : path finding with the mouse from your current position to the next one

**** BE
     - [ ] Given a position and a "moving-way", compute a path to
           another position in the grid.
**** Client
     - [ ] Overlay images for the current path.
     - [ ] When the user's mouse rolls over a cell of the grid, a path
           is computed and displayed.
     - [ ] When the user uses his mouse wheel, the current "moving-way" changes.
     - [ ] The color of the path reflects the color of the "moving-way".
	   

     
	   
	   
	   
	  
	  

	  
	  
	 
	 
	 
	 
	
