#title Ube Functionnal Specification
#author Pierre-Henri Trivier
#desc This is the functionnal spec for ube.

<contents>

* Introduction

This is the functionnal specification for the game ube. 
The name of the game is still work-in-progress, so it might be changed in the end. 

This document is by no mean definitive or complete, any omission or error is the author's own. 

This document is by probably not up to date, by the way. If you really want to know how things work, look at the code. *(sure, there is little to no code at this point, but you get the idea ;) )*.

* What is this game ? 

In the middle of 2008, I got dum... I mean, I started working on a game called "boots-puzzle" -- actually, more a game engine than a game. ube is an evolution of this game.

ube is a puzzle game, in which you have to go through mazes. Your possible moves are constraint at any given time : you are given a bunch of possible moves, and you must use them to reach the exit. 

* Fun factors

A game being a "series of interesting choices", here you need to choose which move is the next, in order to reach the exit.
It involves planning your way through complicated patterns, tricky traps, easy solutions that ends-up being dead-end.
To make things even tricky, time can be against you.

(Note : Part of the fun can be about solving a particular puzzle in as little moves as possible. However not for this version)

Every puzzle should be finishable, without cheating.

You should always get all the information you need at startup (you should'nt have to "guess" what another move will be).

It should be easy to undo and redo a move.

You should be able to get help when you are stuck, to skip a puzzle if it is too complicated.

* Mood

The game should be relaxing. 

The graphical design will be minimalistic, with an overall white on black theme. If any music is present, it should be relaxing instrumental, possibly with an melodic / house twist -- think mild Robert Miles, gentle Bach, the kind of stuff you hear on FIP ;)

Puzzle should start with a quotation, something to give the player food for though, and possibly a hint about how to solve the puzzle.

There is no story, nor is there a need for it.

* Details

This section will go into details about every screens of the game, and everything the player should see.

** Startup page

The startup page need be minimalistic. Options available should be : 

 - Start a new game (possibly choosing a given puzzle)
 - Continue an older game
 - Quit

In detail, if the user starts the game for the first time, there should be three options : 

 - Start a new game...
 - Quit

If you have already started a game, and you're currently playing puzzle "Let there be light" from the "Genesis" chapter, you should see this 

 - Start a new game...
 - Continue chapter "Genesis", at puzzle "Let there be light"
 - Quit

If you have started one game at level Genesis/"Let there be light", and another at level Wonderland/"Through the looking glass", you should see this : 

 - Start a new game...
 - Continue chapter "Genesis", at puzzle "Let there be light"
 - Continue chapter "Wonderland", at puzzle "Through the looking glass"
 - Quit

The first one in the list is the latest game you played.

If you have actually started more than two games, you should only see the latest two, and another option to go through earlier games : 

 - Start a new game...
 - Continue chapter "Genesis", at puzzle "Let there be light"
 - Continue chapter "Wonderland", at puzzle "Through the looking glass"
 - Continue older game...
 - Quit 

Corner case : if you start two games, and they all reach the same chapter and puzzle, it is still a good idea to separate them. In this case, and only in this case (when there is an ambiguity), we should display some information to help you find which game is which, for example : 

 - Start a new game...
 - Continue chapter "Genesis", at puzzle "Let there be light" (last played yesterday at 10:52)
 - Continue chapter "Genesis", at puzzle "Let there be light" (last played Monday, October the 10th at 10:52)
 - Quit

The date should be display in a gentle manner (no "2009/10/10 10:52"), at least "Monday, October the 10 at 10:52".
Ideally, 'special' cases like 'today', 'yesterday' or "10 minutes ago" should be used instead of the general description.)

** Start a new game

The player should get a list of chapters. A chapter is a bunch of puzzles. 
The chapter should have a name, and a short description. 
A chapter can have up to 10 puzzles. 

The screen should present a list of icons for each chapters. 
When clicking on a chapter, the description should be displayed. 
Two options should be shown : 

 - Start chapter
 - Choose a puzzle
 - Quit

If "Start chapter" is chosen, the first puzzle of the chapter should be used.

If "Choose a chapter" is chosen, a list of icons for each puzzle should be displayed.

Already solved puzzle should be displayed differently (lighter tones ? more colorfull ones ? special icons ? )

Mousing over a puzzle icon should make visible the name of the puzzle.

Clicking on an icon starts the chapter from this given puzzle.

Note : 

 - There should not be too much chapters and puzzles displayed on the screen, so that scrolling is useless. Care will have to be taken to the position of the writen text, and its size (possibly constrained at puzzle creation time).
 - Icons should be different enough from each other. The icon might be something very sketchy (so that I don't have to draw beautifull stuffs, as I suck in art ...)
 - The "quit" options is the only one that is always visible
 - Do I also add a "Back" option ? Something to go back to the "entry screen ?". I guess quiting and restarting is always an option.

** Continue at chapter xxx ...

I assume that if the player wants to continue playing, they want to do it right now. So clicking on "Continue at chapter ..." directly goes to playing this chapter.

Let the UI be forgotten : to get to your preferred puzzle in two clicks is enough.

Note : 

 - there should be a possibility to go back to the "Select a puzzle" screen any time, later, in the puzzle UI. BUt it is not the general case that someone decides to continue a game, starting with another puzzle.

** Continue another game...

That leads to a screen where you have to choose between the last 5 / 10 played games (the older ones are forgotten, you need to pick a limit, don't you ?).

This is a single list that goes like this : 

 - Continue chapter Foo, at puzzle Bar (last played on Monday, October the 10th, 10:30)
 - Continue chapter Baz, at puzzle Bing (last played on Sunday, October the 9th, 09:00)
 - etc...
 - Quit

Time indication is always given, to make things easier.
There is a quit button (possibly a "back" one ?)

Each continue line does the same thing as the "Continue at chapter XXX" line from the start screen.

** Playing a puzzle

The main screen is divided into three parts : 

 - the board of the game (center / top / left)
 - the list of available moves (bottom)
 - the UI buttons

*** The board

All visible (non empty) cells of the current puzzles are displayed as white on black, empty circles.

The entry of the puzzle is displayed with a different sprite / color / animation. (blue ?)
The output, too. (red ?)

The current position on the board is displayed as a filled circle (green ?)

*** The stack of moves

Every available move corresponds to an icon. The list of move can contain up to 10 (?) elements. 

The next move is visible (to the left, with more color around it ?).

*** UI options

Buttons should be visible on the right hand side / left hand side to :

 - Get a tip
 - Undo previous move
 - Restart the puzzle
 - Skip the puzzle

UI should not be too intrusive. Idealy, there should only be one button visible, and whenever the mouse moves to 
the right of the screen, the button should appear. 

*** Navigating using the mouse

The current cell is marked in a specific color. When the mouse moves over a cell, if there is a possible path from the current cell to the hovered cell, the cells in between should be colored / animated differently (flashing green ?)

If no path is available, the hovered cells should be colored in red / animated with a NO sprite. 

*** Advancing in the game

When a path is available, and the use clicks on a cell, the current move should be consummed from the list of moves.

If the clicked cell is the exit, the puzzle is solved, and the player should proceed to the next puzzle. 

If it is the last puzzle of a chapter, the player should proceed to the "choose chapter..." screen

** UI-specific Controls

*** The Help button

If possible, help button should suggest a position for next move. Or simply display all the places that you can reach ? 

*** Undoing

It should be possible to undo the previous moves. This can be done either with the "Undo" button, or with a shortcut.

*** Reloading the current puzzle

It should be possible to completely reload the current puzzle.

*** Skipping the current puzzle

It should be possible to skip the current puzzle. A confirmation button appears, and if the user confirm, she proceeds to the next level. 

If it is the last level of a puzzle, the user should proceed to the "choose chapter" screen.

*** Quitting the game

If the user clicks the "quit" button, (or press Esc ?), a confirmation button appears, and if the user confirm, the application closes. 

** Possible moves

*** Notation

I'll use diagrams like this : 

<example>
  1 2 3 4
A % % % -
B X % X %
C - - % %
D X - ! % 
</example>

The legend is : 

 - '!' is the current position
 - '-' is an empty cell
 - X is a non empty cell that is reachable using the current move
 - % is a non empty cell that is not reachable using the current move

*** +1 move (next cell, neighboor, default, single...)

This moves let the player moves from a cell to any contiguous cell.

In this display : 

<example>
  1 2 3 4
A X X X -
B X ! X X
C - - X X
D % - X X 
</example>

From current position !, with default move, all cells are accessible except cell D1.

**** +2 move (jumper, double boots)

This moves two cells at a time.

<example>
  1 2 3 4
A % % % -
B X % X %
C - - % %
D X - ! % 
</example>


From current position !, only the cells that you can reach by jumping 2 cells (even by moving several times) are reachable.

*** chess knight 

<example>
  1 2 3 4
A % % % -
B % X % X
C - - % %
D % - ! % 
</example>

This moves replicates who a knight moves in Chess. It can go in both directions, but it moves only once (otherwhise it becomes almost possible to reach every single cell in the puzzle, so it would be less fun)

*** diagonal move

<example>
  1 2 3 4
A % X % -
B % % ! X
C - - % X
D X - % %
</example>

With this move, any non-empty cell that is on one of the diagonals covered by the current cell can be reached (even if there are empty cells in between)

** Special cells

*** Tunnels

A tunel is a cell that teleports you to another cell. 

<example>
  1 2 3 4
A % T % -
B % % ! -
C - - - -
D - - % t
</example>

If there is a tunnel between 'T' and 't', and the current moves make it possible to reach 'T', then when the player clicks on 'T', it gets teleported to 't'. 
Note that to use the tunnel back (to go from 't' to 'T'), the player must first select go to another cell.

*** Doors and Switches

Some cells might be "doors", closed by a corresponding "switch". It should be obvious from the colors / shape that a switch corresponds to a door. When the user reaches the "switch" cell, the corresponding door gets opened or closed (wich means it becomes a normal cell or an empty one)


